name: minirox CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  test:
    if: >-
      (
        (
          github.event_name == 'schedule'
          && github.repository == 'minirox/minirox'
        ) || (
            github.event_name != 'schedule'
            && !(
              contains(github.event.head_commit.message, '[ci skip]')
              || contains(github.event.head_commit.message, '[skip ci]')
            )
        )
      )
    runs-on: ubuntu-latest
    container: dolfinx/dolfinx
    strategy:
      matrix:
        petsc_arch: [real, complex]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set PETSc scalar type
        run: |
          . /usr/local/bin/dolfinx-${{ matrix.petsc_arch }}-mode
          echo "PETSC_ARCH=$PETSC_ARCH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
      - name: Install minirox
        run: |
          python3 -m pip install .[docs,lint,tests,tutorials]
          python3 -c "import minirox.cpp"
      - name: Run flake8 checks on python files
        run: |
          python3 -m flake8 .
      - name: Run documentation generation
        run: |
          cd docs && make html
      - name: Run unit tests (serial)
        run: |
          COVERAGE_FILE=.coverage_unit_serial python3 -m coverage run --source=minirox -m pytest -n auto tests/unit
      - name: Run unit tests (parallel)
        run: |
          COVERAGE_FILE=.coverage_unit_parallel mpirun -n 2 python3 -m coverage run --source=minirox --parallel-mode -m pytest tests/unit
      - name: Combine coverage reports
        run: |
          python3 -m coverage combine .coverage*
          python3 -m coverage report --fail-under=100 --show-missing --skip-covered
      - name: Run flake8 checks on tutorial files
        run: |
          NO_TESTS_COLLECTED=5
          python3 -m pytest --tag-action=create-notebooks tutorials || (($?==$NO_TESTS_COLLECTED))
          python3 -m pytest --tag-action=create-notebooks --tag-collapse tutorials || (($?==$NO_TESTS_COLLECTED))
          python3 -m pytest --tag-action=create-notebooks --np=2 tutorials || (($?==$NO_TESTS_COLLECTED))
          python3 -m pytest --tag-action=create-notebooks --tag-collapse --np=2 tutorials || (($?==$NO_TESTS_COLLECTED))
          nbqa flake8 .
        shell: bash
      - name: Check for stray outputs, counts and metadata in tutorial files
        uses: RBniCS/check-jupyter-metadata-action@main
        with:
          pattern: "tutorials/*.ipynb"
      - name: Run tutorials (serial)
        run: |
          python3 -m pytest tutorials
      - name: Run tutorials (parallel)
        run: |
          python3 -m pytest --np 2 tutorials
      - name: Warn if scheduled workflow is about to be disabled
        if: github.repository == 'minirox/minirox' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 55
          token: ${{ secrets.SCHEDULED_ACTIONS_WARNING_API_TOKEN }}
